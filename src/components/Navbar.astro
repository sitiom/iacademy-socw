---
const links = [
  { href: "/", text: "Home" },
  { href: "/expo", text: "EXPO" },
];

interface Props {
  lumaEventId?: string;
}

const { lumaEventId } = Astro.props;
const eventUrl = `https://lu.ma/event/${lumaEventId}`;
---

<header
  class="sticky top-0 z-40 mx-auto bg-[#020213a2] font-mono backdrop-blur-md transition-[opacity] ease-in-out"
  data-sticky-header
  id="header"
>
  <div
    class="just mx-auto flex w-full max-w-7xl items-center justify-between px-6 py-5"
  >
    <img
      src="/images/logo-long.png"
      width="150"
      alt="School of Computing Week 2024"
    />
    <nav aria-label="Main navigation" class="flex w-auto items-center">
      <ul class="flex justify-center text-xl font-medium text-[#e5ecf6]">
        {
          links.map(({ href, text }) => (
            <li>
              <a href={href} class="px-4 py-3 hover:text-white">
                {text}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>
    {
      lumaEventId && (
        <a
          href={eventUrl}
          class="luma-checkout--button"
          data-luma-action="checkout"
          data-luma-event-id={lumaEventId}
        >
          Register Now!
        </a>
      )
    }
  </div>
</header>

<script id="luma-checkout" src="https://embed.lu.ma/checkout-button.js"
></script>
<script is:inline>
  (function () {
    if (window.scrollscript) {
      return;
    }

    window.scrollScript = true;

    function attachEvent(selector, event, fn) {
      const matches =
        typeof selector === "string"
          ? document.querySelectorAll(selector)
          : selector;
      if (matches && matches.length) {
        matches.forEach((elem) => {
          elem.addEventListener(event, (e) => fn(e, elem), false);
        });
      }
    }

    const onLoad = function () {
      let lastKnownScrollPosition = window.scrollY;
      let ticking = true;

      function applyHeaderStylesOnScroll() {
        const header = document.querySelector("#header[data-sticky-header]");
        if (!header) return;
        if (
          lastKnownScrollPosition > 60 &&
          !header.classList.contains("scroll")
        ) {
          header.classList.add("scroll");
        } else if (
          lastKnownScrollPosition <= 60 &&
          header.classList.contains("scroll")
        ) {
          header.classList.remove("scroll");
        }
        ticking = false;
      }
      applyHeaderStylesOnScroll();

      attachEvent([document], "scroll", function () {
        lastKnownScrollPosition = window.scrollY;

        if (!ticking) {
          window.requestAnimationFrame(() => {
            applyHeaderStylesOnScroll();
          });
          ticking = true;
        }
      });
    };
    window.onload = onLoad;

    document.addEventListener("astro:after-swap", () => {
      onLoad();
    });
  })();
</script>
